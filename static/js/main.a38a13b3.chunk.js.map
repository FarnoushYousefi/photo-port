{"version":3,"sources":["assets/cover/cover-image.jpg","assets/large sync /^/.*/.jpg$","assets/large/commercial/0.jpg","assets/large/commercial/1.jpg","assets/large/commercial/2.jpg","assets/large/commercial/3.jpg","assets/large/commercial/4.jpg","assets/large/food/0.jpg","assets/large/food/1.jpg","assets/large/food/2.jpg","assets/large/food/3.jpg","assets/large/food/4.jpg","assets/large/landscape/0.jpg","assets/large/landscape/1.jpg","assets/large/landscape/2.jpg","assets/large/landscape/3.jpg","assets/large/landscape/4.jpg","assets/large/portraits/0.jpg","assets/large/portraits/1.jpg","assets/large/portraits/2.jpg","assets/large/portraits/3.jpg","assets/small sync /^/.*/.jpg$","assets/small/commercial/0.jpg","assets/small/commercial/1.jpg","assets/small/commercial/2.jpg","assets/small/commercial/3.jpg","assets/small/commercial/4.jpg","assets/small/food/0.jpg","assets/small/food/1.jpg","assets/small/food/2.jpg","assets/small/food/3.jpg","assets/small/food/4.jpg","assets/small/landscape/0.jpg","assets/small/landscape/1.jpg","assets/small/landscape/2.jpg","assets/small/landscape/3.jpg","assets/small/landscape/4.jpg","assets/small/portraits/0.jpg","assets/small/portraits/1.jpg","assets/small/portraits/2.jpg","assets/small/portraits/3.jpg","utils/helpers.js","components/Nav/index.js","components/About/index.js","components/Modal/index.js","components/PhotoList/index.js","components/Gallery/index.js","components/Contact/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","capitalizeFirstLetter","string","charAt","toUpperCase","slice","Nav","props","categories","setCurrentCategory","currentCategory","contactSelected","setContactSelected","className","data-testid","href","role","aria-label","onClick","category","name","key","About","src","coverImage","style","width","alt","Modal","onClose","currentPhoto","description","index","require","type","PhotoList","useState","setCurrentPhoto","isModalOpen","setIsModalOpen","currentPhotos","filter","photo","toggleModal","image","i","Gallery","ContactForm","errorMessage","setErrorMessage","email","message","formState","setFormState","handleChange","console","log","target","value","isValid","test","String","toLowerCase","validateEmail","length","onSubmit","preventDefault","htmlFor","defaultValue","onChange","rows","App","Contact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a38a13b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover-image.6a2b7a16.jpg\";","var map = {\n\t\"./commercial/0.jpg\": 14,\n\t\"./commercial/1.jpg\": 15,\n\t\"./commercial/2.jpg\": 16,\n\t\"./commercial/3.jpg\": 17,\n\t\"./commercial/4.jpg\": 18,\n\t\"./food/0.jpg\": 19,\n\t\"./food/1.jpg\": 20,\n\t\"./food/2.jpg\": 21,\n\t\"./food/3.jpg\": 22,\n\t\"./food/4.jpg\": 23,\n\t\"./landscape/0.jpg\": 24,\n\t\"./landscape/1.jpg\": 25,\n\t\"./landscape/2.jpg\": 26,\n\t\"./landscape/3.jpg\": 27,\n\t\"./landscape/4.jpg\": 28,\n\t\"./portraits/0.jpg\": 29,\n\t\"./portraits/1.jpg\": 30,\n\t\"./portraits/2.jpg\": 31,\n\t\"./portraits/3.jpg\": 32\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13;","module.exports = __webpack_public_path__ + \"static/media/0.b3afc9f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.13f5264b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.84160b85.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.8c95f860.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.ebacfc34.jpg\";","module.exports = __webpack_public_path__ + \"static/media/0.d49315aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.c981698b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.0a7c2dc1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.ff98319a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.ed8f654e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/0.efdfd6a4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.64329aad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.db9f46c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.af402893.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.72d91e13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/0.4f1634e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.643fa95a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.348d687d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.4b84d735.jpg\";","var map = {\n\t\"./commercial/0.jpg\": 34,\n\t\"./commercial/1.jpg\": 35,\n\t\"./commercial/2.jpg\": 36,\n\t\"./commercial/3.jpg\": 37,\n\t\"./commercial/4.jpg\": 38,\n\t\"./food/0.jpg\": 39,\n\t\"./food/1.jpg\": 40,\n\t\"./food/2.jpg\": 41,\n\t\"./food/3.jpg\": 42,\n\t\"./food/4.jpg\": 43,\n\t\"./landscape/0.jpg\": 44,\n\t\"./landscape/1.jpg\": 45,\n\t\"./landscape/2.jpg\": 46,\n\t\"./landscape/3.jpg\": 47,\n\t\"./landscape/4.jpg\": 48,\n\t\"./portraits/0.jpg\": 49,\n\t\"./portraits/1.jpg\": 50,\n\t\"./portraits/2.jpg\": 51,\n\t\"./portraits/3.jpg\": 52\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 33;","module.exports = __webpack_public_path__ + \"static/media/0.a42cd359.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.e05d88b5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.75df3018.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.0a075f4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.74c830fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/0.736e9503.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.6dc96543.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.082ff7d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.c7510d3a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.8c4c93ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/0.c0bc02a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.100fef3c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.0c7dce01.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.ff79cea1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.9030776b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/0.3cb61cf2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.181f9d5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.efb308ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.b2912d99.jpg\";","export function capitalizeFirstLetter(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function validateEmail(email) {\r\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(String(email).toLowerCase());\r\n}","import React from 'react';\r\nimport { capitalizeFirstLetter } from '../../utils/helpers';\r\n\r\nfunction Nav(props) {\r\n  //First, modify the following expression to deconstruct the contactSelected and setContactSelected functions from props, as shown at the top of the Nav function body:\r\n  const {\r\n    categories = [],\r\n    setCurrentCategory,\r\n    currentCategory,\r\n    contactSelected,\r\n    setContactSelected,\r\n  } = props;\r\n\r\n  const handleClick = (item) => {\r\n    console.log(item);\r\n    return item;\r\n  };\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <h2>\r\n        <a data-testid=\"link\" href=\"/\">\r\n          <span role=\"img\" aria-label=\"camera\">\r\n            {' '}\r\n            📸\r\n          </span>{' '}\r\n          Oh Snap!\r\n        </a>\r\n      </h2>\r\n      <nav>\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-2\">\r\n            <a\r\n              data-testid=\"about\"\r\n              href=\"#about\"\r\n              onClick={() => setContactSelected(false)}\r\n            >\r\n              About me\r\n            </a>\r\n          </li>\r\n          \r\n          <li className={`mx-2 ${contactSelected && 'navActive'}`}>\r\n          \r\n            <span onClick={() => setContactSelected(true)}>Contact</span>\r\n          </li>\r\n          {categories.map((category) => (\r\n            <li\r\n              className={`mx-1 ${\r\n                currentCategory.name === category.name &&\r\n                !contactSelected &&\r\n                `navActive`\r\n              }`}\r\n              key={category.name}\r\n            >\r\n              <span\r\n                onClick={() => {\r\n                  setCurrentCategory(category);\r\n                  setContactSelected(false);\r\n                }}\r\n              >\r\n                {capitalizeFirstLetter(category.name)}\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n//In the class attribute, we'll add a JavaScript conditional statement. If the value of contactSelected is true, which means that the user selected Contact, we want to add the CSS class navActive, which will illuminate the background. We'll use the && operator as a short circuit, as shown in the following statement:\r\n\r\n//<li className={`mx-2 ${contactSelected && 'navActive'}`}></li>\r\n\r\n// line 48 Note also that the navActive class value is assigned only if Contact hasn't been selected and the current category HAS been selected.","import React from 'react'\r\nimport coverImage from \"../../assets/cover/cover-image.jpg\";\r\n\r\nfunction About() {\r\n\r\n  return (\r\n    <section className=\"my-5\" >\r\n      <h1 id=\"about\">Who am I?</h1>\r\n      <img src={coverImage} className=\"my-2\" style={{ width: \"100%\" }} alt=\"cover\" />\r\n      <div className=\"my-2\">\r\n        <p>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec bibendum turpis sed ex condimentum molestie. Mauris condimentum lectus ut ornare dignissim. Mauris faucibus urna mi, ac feugiat metus aliquam maximus. Proin aliquam justo nec diam vulputate vestibulum. Aenean sollicitudin nulla at nisi ornare, nec suscipit massa eleifend. Morbi tristique justo vel turpis sollicitudin, et tristique velit convallis. In hac habitasse platea dictumst. Phasellus mattis nunc sed orci consequat laoreet. Praesent id nisl nibh. Curabitur imperdiet ultricies mollis. In hac habitasse platea dictumst.\r\n      </p>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default About","import React from 'react';\r\nfunction Modal({onClose,currentPhoto}) {\r\n    const {name,category,description,index} =currentPhoto\r\n  return (\r\n    <div className=\"modalBackdrop\">\r\n      <div className=\"modalContainer\">\r\n        <h3 className=\"modalTitle\">{name}</h3>\r\n        <img src ={ require(`../../assets/large/${category}/${index}.jpg`)}alt=\"current category\" />\r\n        <p>{description}</p>\r\n        <button type=\"button\" onClick={onClose}>Close this modal</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n//In the preceding statements, we've created a basic modal with a backdrop and container. The modal also contains a title, a description, the selected image, and a button to close the modal. The photo name and description are currently hardcoded but will eventually need to contain the property values of the photo selected. So how do we obtain this data?\r\n\r\n//We'll answer that question in the next few steps. First, consider the context in which the modal will function: when a user navigates to the photo gallery and selects a photo, the modal should appear with that photo.\r\n\r\n//The list of photos is rendered in the PhotoList component, so this is the logical place for the modal to open—and for us to access the individual photo data. We'll establish the Photolist as the parent component and the Modal as the child component, because the Modal is located in PhotoList. PhotoList also plays a major role in activating the modal, but we we'll discuss that more later.\r\n\r\n//Let's invoke the Modal by adding it to the return statement in the PhotoList component. Doing so will render the current modal and allow us to view this component in the browser as we develop it.\r\n\r\n//Open the PhotoList component and import the Modal component into this file with the following statement:\r\n","import React, { useState } from 'react';\r\nimport Modal from '../Modal';\r\n\r\nconst PhotoList = (props) => {\r\n  const [currentPhoto, setCurrentPhoto] = useState();\r\n  //In this expression, we set the initial state of isModalOpen to false, because we don't want the modal to open until a user has clicked on an image.\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const { category } = props;\r\n  const [photos] = useState([\r\n    {\r\n      name: 'Grocery aisle',\r\n      category: 'commercial',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Grocery booth',\r\n      category: 'commercial',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Building exterior',\r\n      category: 'commercial',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Restaurant table',\r\n      category: 'commercial',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Cafe interior',\r\n      category: 'commercial',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Cat green eyes',\r\n      category: 'portraits',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Green parrot',\r\n      category: 'portraits',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Yellow macaw',\r\n      category: 'portraits',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Pug smile',\r\n      category: 'portraits',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Pancakes',\r\n      category: 'food',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Burrito',\r\n      category: 'food',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Scallop pasta',\r\n      category: 'food',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Burger',\r\n      category: 'food',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Fruit bowl',\r\n      category: 'food',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Green river',\r\n      category: 'landscape',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Docks',\r\n      category: 'landscape',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Panoramic village by sea',\r\n      category: 'landscape',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Domestic landscape',\r\n      category: 'landscape',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n    {\r\n      name: 'Park bench',\r\n      category: 'landscape',\r\n      description:\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ultricie',\r\n    },\r\n  ]);\r\n //We need to make it so that only photos with the selected category appear.\r\n //All we needed to add was a filterMethod and our photos are now displayed properly! \r\n  const currentPhotos = photos.filter((photo) => photo.category === category);\r\n  //The image object represents the element in the photos array, and the i will render the image as we did previously in the src attribute with the require function. \r\n  const toggleModal = (image, i) => {\r\n    setCurrentPhoto({ ...image, index: i });\r\n    //Here we updated the current photo state using the setCurrentPhoto function with the data retrieved through the click event. Notice how we used the spread operator here to add the index: i key value pair to the current photo state. Because currentPhoto now contains the two critical data points needed for the modal, we can pass in currentPhoto as a prop to the Modal, as shown in the following code:\r\n    //The preceding statement will only render the Modal if the value isModalOpen is true, which is precisely what we want. In the next step, we want to open the modal when a user has clicked on an image. We'll do that by modifying the click handler, toggleModal, so that it updates the isModalOpen value to true. This will evaluate the short circuit in the preceding code statement to render the modal.\r\n    setIsModalOpen(!isModalOpen);\r\n  };\r\n  return (\r\n    <div>\r\n     {isModalOpen && <Modal currentPhoto={currentPhoto} onClose={toggleModal}/>}\r\n      <div className=\"flex-row\">\r\n        {currentPhotos.map((image, i) => (\r\n          <img\r\n            src={require(`../../assets/small/${category}/${i}.jpg`)}\r\n            alt={image.name}\r\n            className=\"img-thumbnail mx-1\"\r\n            onClick={() => toggleModal(image, i)}\r\n            key={image.name}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoList;\r\n//In React, we'll use the onClick attribute and assign a click handler function to capture the individual photo data. Let's call the click handler toggleModal, as shown in the following statement:\r\n//The image object represents the element in the photos array, and the i will render the image as we did previously in the src attribute with the require function. \r\n","import React from 'react';\r\nimport PhotoList from '../PhotoList';\r\nimport { capitalizeFirstLetter } from '../../utils/helpers';\r\n\r\nfunction Gallery(props) {\r\n  const { currentCategory } = props;\r\n  return (\r\n    <section>\r\n      <h1 data-testid=\"h1tag\">{capitalizeFirstLetter(currentCategory.name)}</h1>\r\n      <p>{currentCategory.description}</p>\r\n      <PhotoList category={currentCategory.name} />\r\n    </section>\r\n  );\r\n}\r\nexport default Gallery;\r\n","import React, { useState } from 'react';\r\nimport { validateEmail } from '../../utils/helpers';\r\nfunction ContactForm() {\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    console.log(formState);\r\n  }\r\n  const [formState, setFormState] = useState({\r\n    name: 'farnoush',\r\n    email: 'farnoush@gmail.com',\r\n    message: 'hello every one',\r\n  });\r\n  //This is a good case where we can destructure the formState object into its named properties, \r\n  const { name, email, message } = formState;\r\n\r\n  function handleChange(e) {\r\n    console.log('value', e.target.value);\r\n    console.log('name', e.target.name);\r\n    console.log('e.target', e.target);\r\n    setFormState({ ...formState, [e.target.name]: e.target.value });\r\n    //This conditional statement says if the <input> is email, then validate the value of that input field with the validateEmail function and assign its return to isValid. Let's log this value to verify that the logic is performing properly.\r\n    if (e.target.name === 'email') {\r\n      console.log(e.target.name)\r\n      // isValid conditional statement\r\n      const isValid = validateEmail(e.target.value);\r\n      if (!isValid) {\r\n        setErrorMessage('Your email is invalid.');\r\n      } else {\r\n        if (!e.target.value.length) {\r\n          setErrorMessage(`${e.target.name} is required`);\r\n        } else {\r\n          setErrorMessage('');\r\n        }\r\n      }\r\n\r\n      console.log(isValid);\r\n      // isValid conditional statement\r\n    }\r\n    if (!errorMessage) {\r\n      //In the preceding function, we're using the setFormState function to update the formState value for the name property. We assign the value taken from the input field in the UI with e.target.value and assign this value to the property formState.name. We use the spread operator, ...formState, so we can retain the other key-value pairs in this object. Without the spread operator, the formState object would be overwritten to only contain the name: value key pair.\r\n      //We could, but this wouldn't adhere to the DRY principle. It'd be better if we could make the property name a dynamic variable that's determined by the form element. \r\n      //Thankfully, we can with the following syntax:\r\n      //The name property of target in the preceding expression actually refers to the name attribute of the form element. This attribute value matches the property names of formState (name, email, and message) and allows us to use [ ] to create dynamic property names.\r\n      setFormState({ ...formState, [e.target.name]: e.target.value });\r\n    }\r\n    console.log('errorMessage', errorMessage);\r\n  }\r\n\r\n  console.log(formState);\r\n  return (\r\n    <section>\r\n      <h1>Contact me</h1>\r\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            defaultValue={name}\r\n            name=\"name\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            defaultValue={email}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"message\">Message:</label>\r\n          <textarea\r\n            name=\"message\"\r\n            rows=\"5\"\r\n            defaultValue={message}\r\n            onChange={handleChange}\r\n          />\r\n         \r\n          {errorMessage && (\r\n            <div>\r\n              <p className=\"error-text\">{errorMessage}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </section>\r\n  );\r\n}// If errorMessage has a truthy value, the <div> block will render. If errorMessage doesn't have an error message, the following <div> block doesn't render. The && operator—known as the AND operator—is being used here as a short circuit. If the first value resolves to true, the second expression is evaluated. \r\n\r\nexport default ContactForm;\r\n","import React, { useState } from 'react';\r\nimport Nav from './components/Nav';\r\nimport About from './components/About';\r\nimport Gallery from './components/Gallery';\r\nimport ContactForm from './components/Contact';\r\n\r\nfunction App() {\r\n  //In the preceding expression, we set the initial value of contactSelected to false. This is to prevent the contact form from showing when a user initially navigates to the homepage.\r\n  const [contactSelected, setContactSelected] = useState(false);\r\n  const [categories] = useState([\r\n    {\r\n      name: 'commercial',\r\n      description:\r\n        'Photos of grocery stores, food trucks, and other commercial projects',\r\n    },\r\n    { name: 'portraits', description: 'Portraits of people in my life' },\r\n    { name: 'food', description: 'Delicious delicacies' },\r\n    {\r\n      name: 'landscape',\r\n      description: 'Fields, farmhouses, waterfalls, and the beauty of nature',\r\n    },\r\n  ]);\r\n\r\n  const [currentCategory, setCurrentCategory] = useState(categories[0]);\r\n\r\n  return (\r\n    <div>\r\n      <Nav\r\n        categories={categories}\r\n        setCurrentCategory={setCurrentCategory}\r\n        currentCategory={currentCategory}\r\n        contactSelected={contactSelected}\r\n        setContactSelected={setContactSelected}\r\n      ></Nav>\r\n      <main>\r\n        {!contactSelected ? (\r\n          <>\r\n            <Gallery currentCategory={currentCategory}></Gallery>\r\n            <About></About>\r\n          </>\r\n        ) : (\r\n          <ContactForm></ContactForm>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n//A single-page application, or SPA, is a web application or website that interacts with the web browser by dynamically rewriting the current webpage, in place of the default method of the browser loading entirely new pages. This approach allows for a more fluid UI because the page doesn't have to be reloaded each time.React allows for conditional rendering and can replace a portion of the webpage based on the user's selection.\r\n//Notice the <> and </> that wrap the Gallery and About components. Can you imagine what these are and what they might be for? They are called React fragments—a shorthand abbreviation for <React.Fragment></React.Fragment>.\r\n//They're a useful tool in React to allow multiple elements to be grouped together. Although in JSX you can only return a single parent element, this rule can be satisfied by wrapping the children components in a React fragment.\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}